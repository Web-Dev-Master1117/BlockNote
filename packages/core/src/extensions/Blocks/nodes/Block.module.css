/*
BASIC STYLES
*/

.blockOuter {
  /* padding-bottom: 15px; */
  font-size: 16px;
  line-height: 1.5;
  transition: all 0.2s;
  font-weight: normal;
}

.block {
  border-left: 2px solid white;
  border-color: white;
  transition: all 0.2s;
}

.block {
  /* content: ""; */
  transition: all 0.2s;
  margin: 0px;
}

.blockContent {
  font-size: 1em;
  padding: 3px 0;
  transition: font-size 0.2s;
  /* display: inline-block; */
}

.blockContent::before {
  /* content: ""; */
  transition: all 0.2s;
  /*margin: 0px;*/
}

/* reset styles, they will be set on blockContent */
.blockContent p,
.blockContent h1,
.blockContent h2,
.blockContent h3,
.blockContent li {
  margin: 0;
  padding: 0;
  font-size: inherit;
}

/*
NESTED BLOCKS
*/

.blockGroup .blockGroup {
  margin-left: 1.5em;
}

.blockGroup .blockGroup > .blockOuter {
  position: relative;
}

.blockGroup .blockGroup > .blockOuter:not([data-prev-depth-changed])::before {
  content: " ";
  display: inline;
  border-left: 1px solid #ccc;
  position: absolute;
  left: -20px;
  height: 100%;
  transition: all 0.2s 0.1s;
}

.blockGroup .blockGroup > .blockOuter[data-prev-depth-change="-2"]::before {
  height: 0;
}

/* NESTED BLOCK ANIMATIONS (change in indent) */

[data-prev-depth-change="1"] {
  --x: 1;
}
[data-prev-depth-change="2"] {
  --x: 2;
}
[data-prev-depth-change="3"] {
  --x: 3;
}
[data-prev-depth-change="4"] {
  --x: 4;
}
[data-prev-depth-change="5"] {
  --x: 5;
}

[data-prev-depth-change="-1"] {
  --x: -1;
}
[data-prev-depth-change="-2"] {
  --x: -2;
}
[data-prev-depth-change="-3"] {
  --x: -3;
}
[data-prev-depth-change="-4"] {
  --x: -4;
}
[data-prev-depth-change="-5"] {
  --x: -5;
}

.blockOuter[data-prev-depth-change] {
  margin-left: calc(10px * var(--x));
}

.blockOuter[data-prev-depth-change] .blockOuter[data-prev-depth-change] {
  margin-left: 0;
}

/* HEADINGS*/
[data-heading-level="1"] {
  --level: 3em;
}
[data-heading-level="2"] {
  --level: 2em;
}
[data-heading-level="3"] {
  --level: 1.3em;
}

[data-prev-heading-level="1"] {
  --prev-level: 3em;
}
[data-prev-heading-level="2"] {
  --prev-level: 2em;
}
[data-prev-heading-level="3"] {
  --prev-level: 1.3em;
}

.blockOuter[data-prev-type="headingContent"] > .block > .blockContent {
  font-size: var(--prev-level);
  font-weight: bold;
}

.blockOuter:not([data-prev-type])
  > .block
  > .blockContent[data-content-type="headingContent"] {
  font-size: var(--level);
  font-weight: bold;
}

/* LISTS */

.blockContent::before {
  margin-right: 0;
  content: "";
}

/* Ordered */
[data-list-item-type="ordered"] {
  --index: attr(data-list-item-index)
}

[data-prev-list-item-type="ordered"] {
  --prev-index: attr(data-prev-list-item-index)
}

.blockOuter[data-prev-list-item-type="ordered"]:not([data-prev-list-item-index="none"])
> .block
> .blockContent::before {
  margin-right: 1.2em;
  content: var(--prev-index)".";
}

.blockOuter:not([data-prev-type])
> .block
> .blockContent[data-list-item-type="ordered"]::before {
  margin-right: 1.2em;
  content: var(--index)".";
}

/* Unordered */
/* No list nesting */
.blockOuter[data-prev-list-item-type="unordered"]
> .block
> .blockContent::before {
  margin-right: 1.2em;
  content: "•";
}

.blockOuter:not([data-prev-type])
> .block
> .blockContent[data-list-item-type="unordered"]::before {
  margin-right: 1.2em;
  content: "•";
}

/* 1 level of list nesting */
[data-list-item-type="unordered"]~.blockGroup
> .blockOuter[data-prev-list-item-type="unordered"]
> .block
> .blockContent::before {
  margin-right: 1.2em;
  content: "◦";
}

[data-list-item-type="unordered"]~.blockGroup
> .blockOuter:not([data-prev-type])
> .block
> .blockContent[data-list-item-type="unordered"]::before {
  margin-right: 1.2em;
  content: "◦";
}

/* 2 levels of list nesting */
[data-list-item-type="unordered"]~.blockGroup
[data-list-item-type="unordered"]~.blockGroup
> .blockOuter[data-prev-list-item-type="unordered"]
> .block
> .blockContent::before {
  margin-right: 1.2em;
  content: "▪";
}

[data-list-item-type="unordered"]~.blockGroup
[data-list-item-type="unordered"]~.blockGroup
> .blockOuter:not([data-prev-type])
> .block
> .blockContent[data-list-item-type="unordered"]::before {
  margin-right: 1.2em;
  content: "▪";
}

/* PLACEHOLDERS*/

.blockContent > :first-child {
  display: inline;
}

.blockContent.isEmpty > :first-child:before,
.blockContent.isFilter > :first-child:before {
  /*float: left; */
  content: "";
  color: #aeb8c2;
  pointer-events: none;
  height: 0;
  /* width: 0; */
  position: absolute;
  font-style: italic;
}

/* TODO: would be nicer if defined from code */

.blockContent.isEmpty.hasAnchor > :first-child:before {
  content: "Enter text or type '/' for commands";
}

.blockContent.isFilter.hasAnchor > :first-child:before {
  content: "Type to filter";
}

.blockContent[data-content-type="headingContent"].isEmpty
  > :first-child::before {
  content: "Heading";
}

.blockContent[data-content-type="listItemContent"].isEmpty
  > :first-child:before {
  content: "List";
}
